package testUI;

import apiClient.FactoryRequest;
import io.qameta.allure.Attachment;
import io.qameta.allure.Description;
import io.qameta.allure.Owner;
import io.qameta.allure.Step;
import io.qameta.allure.junit4.DisplayName;
import io.restassured.response.Response;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class VulnerabilityTest {
    String globalScanID = "";

    @Before
    public void before(){}

     @Test
     @DisplayName("Verify the vulnerability test using OWASP")
     @Description("This test case verify the attack of vulnerability using owasp with the last pluggins")
     @Owner("Cecilia Alvarado")
     public void verifyVulnerabilityScanTest() throws InterruptedException {
         globalScanID = startScanningOWASPZAP();
         monitoringStateAttack(globalScanID);
     }

    @After
    public void after(){
        generateReportOWASP();
    }

    @Attachment(value ="{0}", type="text/html")
    public static String attachHTMLFile(String name,String html){
        return html;
    }


    @Step("Start Vulnerability Test using OWASP ZAP")
     public String startScanningOWASPZAP(){
         // Iniciar el scan ------> obtener ID
         String startScanUrl="http://127.0.0.1:8888/JSON/ascan/action/scan/?url=\"https://todoist.com\"&recurse=&inScopeOnly=&scanPolicyName=&method=&postData=&contextId=";
         Response response=FactoryRequest.make("get").send(startScanUrl);
         response.prettyPrint();

         String scanId = response.then().extract().path("scan");
         System.out.println("ID :"+ scanId);
         return scanId;
     }

     @Step("Monitoring Scan of OWASP ZAP 100%")
     public void monitoringStateAttack(String id) throws InterruptedException {
         // Preguntar si termin√≥ el scan hasta que llegue al 100%  usando el ID (si se para el scan, se pone en 100%)
         String getStateUrl="http://127.0.0.1:8888/JSON/ascan/view/status/?scanId="+id;
         String isComplete="";
         while (!isComplete.equals("100") ){
             Thread.sleep(30000);
             Response responseStatus=FactoryRequest.make("get").send(getStateUrl);
             isComplete=responseStatus.then().extract().path("status");
             System.out.println("OWASP Status : "+isComplete+" %");
         }
     }

     public void generateReportOWASP(){
         String getReportHTML="http://127.0.0.1:8888/OTHER/core/other/htmlreport/";
         Response responseReport=FactoryRequest.make("get").send(getReportHTML);
         String htmlReport=responseReport.body().asString();
         attachHTMLFile("OWASP Report Vulnerability Detail",htmlReport);

         String getSummaryReportHtml = "http://127.0.0.1:8888/HTML/ascan/view/scanProgress/?scanId="+globalScanID;
         Response responseSummaryReport = FactoryRequest.make("get").send(getSummaryReportHtml);
         String htmlSummaryReport = responseSummaryReport.body().asString();
         attachHTMLFile("OWASP Summary Report",htmlSummaryReport);
     }

}
